@{
    var db = Database.Open("WebPagesScriptures");
    var selectedData = db.Query("SELECT id, book + ' ' + CAST(chapter AS NVARCHAR(10)) + ':' + verse AS reference, note, date_added as \"Date Added\" FROM Scriptures ORDER BY date_added");
    var grid = new WebGrid(source: selectedData, rowsPerPage: 5);
}

<!DOCTYPE html>
<html>
<head>
    <title>My Scriptures</title>

    @* Bootstrap *@
    <link href="~/css/vendor/bootstrap-reboot.min.css" rel="stylesheet" />
    <link href="~/css/vendor/bootstrap-grid.min.css" rel="stylesheet" />
    <link href="~/css/vendor/bootstrap.min.css" rel="stylesheet" />

    @* Google Font *@
    <link href="https://fonts.googleapis.com/css?family=Roboto" rel="stylesheet">

    @* FontAwesome! *@
    <link href="~/css/vendor/fontawesome-all.min.css" rel="stylesheet" />

    @* Custom Style *@
    <link href="~/css/style.css" rel="stylesheet" />
</head>
<body>
    <div class="container">
        <div class="row">
            <header class="col text-center">
                <h1>My Scriptures</h1> <img src="~/fair-use-scripture-icon.png" alt="" />
            </header>
        </div>
        <div class="row search">
            <div class="col">
                <form action="/" method="post">
                    <div class="row">
                        <div class="col">
                            <input type="text" class="form-control" placeholder="Search by Book" />
                        </div>
                        <div class="col">
                            <input type="text" class="form-control" placeholder="Search by Keyword" />
                        </div>
                    </div>
                </form>
            </div>
        </div>
        <div class="row">
            <div class="col">
                @grid.GetHtml(
                     tableStyle: "table scriptures",
                     columns: grid.Columns(
                         grid.Column(format: @<a href="~/EditScripture?id=@item.id"><i class="far fa-edit text-warning"></i></a>),
                         grid.Column("Reference"), // I figure, sorting by the full reference is better than just book alone, right?
                         grid.Column("Note"),
                         grid.Column(columnName: "Date Added", format: (item) => string.Format("{0:MMM dd, yyyy}", item["Date Added"])),
                         grid.Column(format: @<a href="~/EditScripture?id=@item.id"><i class="far fa-trash-alt text-danger"></i></a>)
                     )
                 )
            </div>
        </div>
        <div class="row">
            <div class="col">
                <a href="" class="btn btn-success btn-block">
                    <i class="fas fa-plus-circle"></i> Add Scripture
                </a>
            </div>
        </div>
    </div>
</body>
</html>
